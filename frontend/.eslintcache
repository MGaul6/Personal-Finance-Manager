[{"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/index.js":"1","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/App.js":"2","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/store.js":"3","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/reportWebVitals.js":"4","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/API/auth.js":"5","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Reducers/transactions.js":"6","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Reducers/accounts.js":"7","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Reducers/auth.js":"8","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/shared.js":"9","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Actions/types.js":"10","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Actions/actions.js":"11","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Layout/index.jsx":"12","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Accounts/Accounts.jsx":"13","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Signup/signup.jsx":"14","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Login/login.jsx":"15","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Routing/PrivateRoute.jsx":"16","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Transactions/Transactions.jsx":"17","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/utils/spinners.js":"18","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/utils/date.js":"19","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Accounts/AddAccount.jsx":"20","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Accounts/EditAccount.jsx":"21","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Transactions/AddTransaction.jsx":"22","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Transactions/EditTransaction.jsx":"23"},{"size":573,"mtime":1609130344000,"results":"24","hashOfConfig":"25"},{"size":506,"mtime":1609051902000,"results":"26","hashOfConfig":"25"},{"size":482,"mtime":1609135144000,"results":"27","hashOfConfig":"25"},{"size":362,"mtime":499151700000,"results":"28","hashOfConfig":"25"},{"size":1419,"mtime":1609124452000,"results":"29","hashOfConfig":"25"},{"size":1073,"mtime":1609134782000,"results":"30","hashOfConfig":"25"},{"size":977,"mtime":1609128492000,"results":"31","hashOfConfig":"25"},{"size":1388,"mtime":1609048842000,"results":"32","hashOfConfig":"25"},{"size":584,"mtime":1609030800000,"results":"33","hashOfConfig":"25"},{"size":752,"mtime":1609124130000,"results":"34","hashOfConfig":"25"},{"size":1331,"mtime":1609134716000,"results":"35","hashOfConfig":"25"},{"size":3489,"mtime":1609141606000,"results":"36","hashOfConfig":"25"},{"size":2442,"mtime":1609130276000,"results":"37","hashOfConfig":"25"},{"size":2266,"mtime":1609065482000,"results":"38","hashOfConfig":"25"},{"size":1880,"mtime":1609141436000,"results":"39","hashOfConfig":"25"},{"size":671,"mtime":1609122992000,"results":"40","hashOfConfig":"25"},{"size":2405,"mtime":1609136568000,"results":"41","hashOfConfig":"25"},{"size":258,"mtime":1609052546000,"results":"42","hashOfConfig":"25"},{"size":361,"mtime":1609052546000,"results":"43","hashOfConfig":"25"},{"size":3028,"mtime":1609153526000,"results":"44","hashOfConfig":"25"},{"size":3708,"mtime":1609153516000,"results":"45","hashOfConfig":"25"},{"size":4333,"mtime":1609146656000,"results":"46","hashOfConfig":"25"},{"size":4945,"mtime":1609153464000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1tmjytr",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/index.js",[],["106","107"],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/App.js",["108"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Layout from './components/Layout';\nimport { LoadUser } from './API/auth';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(LoadUser());\n  }, [LoadUser]);\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Layout />\n      </BrowserRouter>\n    </div >\n  );\n}\n\nexport default App;\n","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/store.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/reportWebVitals.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/API/auth.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Reducers/transactions.js",["109"],"\r\nimport {\r\n  ADD_TRANSACTION,\r\n  GET_TRANSACTIONS,\r\n  UPDATE_TRANSACTION,\r\n  DELETE_TRANSACTION\r\n} from \"../Actions/types\";\r\n\r\nconst initialState = {\r\n  fetched: false,\r\n  transactions: []\r\n}\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, payload]\r\n      };\r\n    case GET_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        transactions: [...payload]\r\n      };\r\n    case DELETE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions.filter(transaction => transaction.transaction_id !== payload)]\r\n      };\r\n    case UPDATE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions.map(transaction => {\r\n          if (transaction.transaction_id !== payload.id) {\r\n            return transaction;\r\n          }\r\n          else return payload.transaction;\r\n        })]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Reducers/accounts.js",["110"],"\r\nimport {\r\n  ADD_ACCOUNT,\r\n  GET_ACCOUNTS,\r\n  UPDATE_ACCOUNT,\r\n  DELETE_ACCOUNT\r\n} from \"../Actions/types\";\r\n\r\nconst initialState = {\r\n  fetched: false,\r\n  accounts: []\r\n}\r\n\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        accounts: [...state.accounts, payload]\r\n      };\r\n    case GET_ACCOUNTS:\r\n      return {\r\n        ...state,\r\n        accounts: [...payload]\r\n      };\r\n    case DELETE_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        accounts: [...state.accounts.filter(account => account.account_id !== payload)]\r\n      };\r\n    case UPDATE_ACCOUNT:\r\n      return {\r\n        ...state,\r\n        accounts: [...state.accounts.map(account => {\r\n          if (account.account_id !== payload.id) {\r\n            return account;\r\n          }\r\n          else return payload.account;\r\n        })]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Reducers/auth.js",["111"],"import {\r\n  // REGISTER_SUCCESS,\r\n  // REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../Actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  login_error: null,\r\n  user: null,\r\n  role: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        login_error: null,\r\n        user: payload,\r\n        role: payload.role,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        role: payload.user.role,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        login_error: null,\r\n      };\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        login_error: action.payload,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n      // localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/shared.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Actions/types.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/Actions/actions.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Layout/index.jsx",["112","113","114","115"],"import React from 'react'\r\nimport { Layout, Menu, Button, Breadcrumb } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport './layout.css';\r\nimport Login from '../Login/login';\r\nimport Signup from '../Signup/signup';\r\nimport { Switch, Route, withRouter } from 'react-router-dom';\r\nimport Accounts from '../Accounts/Accounts';\r\nimport PrivateRoute from '../Routing/PrivateRoute';\r\nimport Transactions from '../Transactions/Transactions';\r\nimport { Logout } from '../../API/auth';\r\nimport { useDispatch, connect } from 'react-redux';\r\n// const { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nfunction Index({ history, Auth: { user, isAuthenticated } }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      <Layout>\r\n        <Header className=\"header\">\r\n          <span className=\"logo\">NUSMoney</span>\r\n          <div>\r\n            {/* <Button type=\"primary\" \r\n            onClick={() => dispatch(Logout())} >\r\n              Logout\r\n            </Button> */}\r\n          </div>\r\n        </Header>\r\n        <Layout>\r\n          {isAuthenticated &&\r\n            <Sider width={200} className=\"site-layout-background\">\r\n              <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['1']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                onSelect={e => console.log(e)}\r\n              >\r\n                <Menu.Item key=\"/\" icon={<UserOutlined />} onClick={() => history.push(\"/transactions\")} >Transactions</Menu.Item>\r\n                <Menu.Item key=\"/accounts\" icon={<UserOutlined />} onClick={() => history.push(\"/accounts\")}>Accounts</Menu.Item>\r\n                <Menu.Item key=\"/logout\" icon={<UserOutlined />} onClick={() => dispatch(Logout())}>Logout</Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n          }\r\n          {!isAuthenticated &&\r\n            <Sider width={200} className=\"site-layout-background\">\r\n              <Menu\r\n                mode=\"inline\"\r\n                defaultSelectedKeys={['1']}\r\n                defaultOpenKeys={['sub1']}\r\n                style={{ height: '100%', borderRight: 0 }}\r\n                onSelect={e => console.log(e)}\r\n              >\r\n                <Menu.Item key=\"/login\" icon={<UserOutlined />} onClick={() => history.push(\"/login\")} >Login</Menu.Item>\r\n                <Menu.Item key=\"/signup\" icon={<UserOutlined />} onClick={() => history.push(\"/signup\")} >Signup</Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n          }\r\n          <Layout style={{ padding: '0 24px 24px' }}>\r\n            {/* <Breadcrumb style={{ margin: '16px 0' }}>\r\n            \r\n            </Breadcrumb> */}\r\n            <Content\r\n              className=\"site-layout-background main-content\"\r\n            >\r\n              <Switch>\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/signup\" component={Signup} />\r\n                <PrivateRoute path=\"/accounts\" component={Accounts} />\r\n                <PrivateRoute path=\"/transactions\" component={Transactions} />\r\n                <PrivateRoute path=\"/\" component={Accounts} />\r\n                <Route path=\"/\" component={Login} />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = ({ Auth }) => ({ Auth })\r\nexport default connect(mapStateToProps)(withRouter(Index))","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Accounts/Accounts.jsx",["116","117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Tag, Space } from 'antd';\r\nimport './accounts.css';\r\nimport AddAccount from './AddAccount';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { get_accounts } from '../../Actions/actions';\r\nimport { baseUrl } from '../../shared';\r\nimport { getDateString } from '../../utils/date';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport EditAccount from './EditAccount';\r\n\r\n\r\n\r\nfunction Accounts({ Accounts: { fetched, accounts }, Auth: { user } }) {\r\n  const [account_id, setAccount_id] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    var config = {\r\n      params: { user_id: user.user_id }\r\n    };\r\n    baseUrl.get('/accounts/user_id', config)\r\n      .then(res => {\r\n        dispatch(get_accounts(res.data));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n\r\n  console.log(accounts);\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n\r\n    },\r\n    {\r\n      title: 'Balance',\r\n      dataIndex: 'balance',\r\n      key: 'balance',\r\n    },\r\n    {\r\n      title: 'Date Created',\r\n      dataIndex: 'date_created',\r\n      key: 'date_created',\r\n      render: text => getDateString(text),\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      dataIndex: 'account_id',\r\n      key: 'account_id',\r\n      render: text => <div>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<EditOutlined />}\r\n          // loading={loadings[1]}\r\n          onClick={() => setAccount_id(text)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </div>,\r\n    },\r\n  ]\r\n  const data = [\r\n    {\r\n      key: '1',\r\n      name: 'John Brown',\r\n      age: 32,\r\n      address: 'New York No. 1 Lake Park',\r\n      tags: ['nice', 'developer'],\r\n    },\r\n    {\r\n      key: '2',\r\n      name: 'Jim Green',\r\n      age: 42,\r\n      address: 'London No. 1 Lake Park',\r\n      tags: ['loser'],\r\n    },\r\n    {\r\n      key: '3',\r\n      name: 'Joe Black',\r\n      age: 32,\r\n      address: 'Sidney No. 1 Lake Park',\r\n      tags: ['cool', 'teacher'],\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <AddAccount  />\r\n      <EditAccount account_id={account_id} setAccountId={setAccount_id} />\r\n      <Table columns={columns} dataSource={accounts} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ Auth, Accounts }) => ({ Auth, Accounts })\r\nexport default connect(mapStateToProps)(Accounts)","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Signup/signup.jsx",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Login/login.jsx",["120"],"import React from 'react'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, connect } from 'react-redux';\r\nimport { login } from '../../API/auth';\r\nimport './login.css';\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\n\r\nfunction Login(props) {\r\n\r\n  const isAuthenticated = props.Auth.isAuthenticated;\r\n  const login_error= props.Auth.login_error;\r\n  const dispatch = useDispatch();\r\n\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    dispatch(login(values));\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n  return (\r\n    <div className=\"login-page-sec1\">\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input type=\"email\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          don't have an account? <Link to=\"/signup\">Create Account</Link>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <p>{login_error}</p>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Login\r\n        </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ Auth }) => ({ Auth })\r\nexport default connect(mapStateToProps)(Login)","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Routing/PrivateRoute.jsx",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Transactions/Transactions.jsx",["121","122","123","124"],"import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Tag, Space } from 'antd';\r\nimport './transactions.css';\r\nimport AddTransaction from './AddTransaction';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { get_accounts, get_transactions } from '../../Actions/actions';\r\nimport { baseUrl } from '../../shared';\r\nimport { getDateString } from '../../utils/date';\r\nimport { EditOutlined } from '@ant-design/icons';\r\nimport EditTransaction from './EditTransaction';\r\n\r\n\r\n\r\nfunction Transactions({ Accounts: { fetched, accounts }, Transactions: { transactions }, Auth: { user } }) {\r\n  const [id, setId] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    var config = {\r\n      params: { user_id: user.user_id }\r\n    };\r\n    baseUrl.get('/transactions/user_id', config)\r\n      .then(res => {\r\n        dispatch(get_transactions(res.data));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    var config = {\r\n      params: { user_id: user.user_id }\r\n    };\r\n    baseUrl.get('/accounts/user_id', config)\r\n      .then(res => {\r\n        dispatch(get_accounts(res.data));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n\r\n  console.log(transactions);\r\n  const columns = [\r\n    {\r\n      title: 'Amount',\r\n      dataIndex: 'transaction_amount',\r\n      key: 'transaction_amount',\r\n\r\n    },\r\n    {\r\n      title: 'Transaction Type',\r\n      dataIndex: 'transaction_type',\r\n      key: 'transaction_type',\r\n    },\r\n    {\r\n      title: 'Transaction Date',\r\n      dataIndex: 'transaction_date',\r\n      key: 'transaction_date',\r\n      render: text => getDateString(text),\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      dataIndex: 'account_id',\r\n      key: 'account_id',\r\n      render: text => <div>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<EditOutlined />}\r\n          // loading={loadings[1]}\r\n          onClick={() => setId(text)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </div>,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <AddTransaction />\r\n      <EditTransaction id={id} setId={setId} />\r\n      <Table columns={columns} dataSource={transactions} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ Auth, Accounts, Transactions }) => ({ Auth, Accounts, Transactions })\r\nexport default connect(mapStateToProps)(Transactions)","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/utils/spinners.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/utils/date.js",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Accounts/AddAccount.jsx",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Accounts/EditAccount.jsx",["125","126","127","128"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Input, InputNumber, } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { update_account, delete_account } from '../../Actions/actions';\r\nimport { baseUrl } from '../../shared';\r\n\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 20, span: 4 },\r\n};\r\nfunction AddAccount({ account_id, setAccountId, Auth: { user }, Accounts: { accounts } }) {\r\n  // const [visible, setVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [state, setState] = useState(null)\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (account_id) {\r\n      console.log(\"running\");\r\n      const account = accounts.find(acc => acc.account_id === account_id);\r\n      setState(account);\r\n      form.setFieldsValue({ ...account });\r\n    }\r\n  }, [account_id]);\r\n\r\n\r\n  const onFinish = values => {\r\n    setLoading(true);\r\n    values.user_id = user.user_id;\r\n    values.account_id = account_id;\r\n    baseUrl.put('/accounts', values)\r\n      .then(res => {\r\n        setLoading(false);\r\n        setAccountId(false);\r\n        dispatch(update_account({ id: account_id, account: { ...values, account_id: account_id } }));\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n      })\r\n\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    baseUrl.delete(\"/accounts/account_id\", { params: { account_id } })\r\n      .then(res => {\r\n        setAccountId(false);\r\n        dispatch(delete_account(account_id));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    // console.log('Failed:', errorInfo);\r\n  };\r\n  const visible = account_id ? true : false;\r\n  console.log(visible, account_id);\r\n  return (\r\n    <div>\r\n\r\n      <Modal\r\n        visible={visible}\r\n        title=\"Edit Account\"\r\n        // onOk={this.handleOk}\r\n        onCancel={() => setAccountId(false)}\r\n        footer={[\r\n          <Button key=\"submit\" type=\"primary\"\r\n            danger\r\n            loading={loading}\r\n            onClick={() => handleDelete()}\r\n          >\r\n            Delete\r\n            </Button>,\r\n          <Button key=\"submit\" type=\"primary\"\r\n            loading={loading}\r\n            onClick={() => { document.getElementById(\"add-btn\").click() }}\r\n          >\r\n            Update\r\n            </Button>,\r\n        ]}\r\n      >\r\n        <div>\r\n          <Form\r\n            {...layout}\r\n            name=\"basic\"\r\n            form={form}\r\n            initialValues={{ remember: true }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n          >\r\n            <Form.Item\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              rules={[{ required: true, message: 'Please input your username!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Balance\"\r\n              name=\"balance\"\r\n              rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n              <InputNumber />\r\n            </Form.Item>\r\n            {/* <Form.Item {...tailLayout}> */}\r\n            <Button id=\"add-btn\" style={{ display: 'none' }} type=\"primary\" htmlType=\"submit\">\r\n              Update\r\n                </Button>\r\n            {/* </Form.Item> */}\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ Auth, Accounts }) => ({ Auth, Accounts })\r\nexport default connect(mapStateToProps)(AddAccount)","/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Transactions/AddTransaction.jsx",[],"/Users/benson/Desktop/Upskilling/NUS/COMFTDEV2_05_Developers Toolkit Part 2 - Middleware to Backend/NUSMoneyApp/frontend/src/components/Transactions/EditTransaction.jsx",["129","130"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal, Form, Select, InputNumber, } from 'antd';\r\nimport {  } from '@ant-design/icons';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { update_transaction, delete_transaction } from '../../Actions/actions';\r\nimport { baseUrl } from '../../shared';\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 24 },\r\n  wrapperCol: { span: 24 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 20, span: 4 },\r\n};\r\n\r\n\r\n\r\nfunction AddAccount({ id, setId, Auth: { user }, Accounts: { accounts }, Transactions: { transactions } }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [state, setState] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  useEffect(() => {\r\n    if (id) {\r\n      console.log(\"running\");\r\n      const transaction = transactions.find(acc => acc.transaction_id === id);\r\n      setState(transaction);\r\n      form.setFieldsValue({ ...transaction });\r\n    }\r\n  }, [id]);\r\n\r\n\r\n  const onFinish = values => {\r\n    setLoading(true);\r\n    values.transaction_id = id;\r\n    console.log(\"values to send\", values);\r\n    baseUrl.post('/transactions', values)\r\n      .then(res => {\r\n        setLoading(false);\r\n        setId(false);\r\n        dispatch(update_transaction({ id: id, transaction: { ...values, transaction_id: id } }));\r\n      })\r\n      .catch(error => {\r\n        console.log(error.message);\r\n      })\r\n\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    baseUrl.delete(\"/transactions/id\", { params: { id } })\r\n      .then(res => {\r\n        setId(false);\r\n        dispatch(delete_transaction(id));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const onTypeChange = value => {\r\n    setState({ ...state, transaction_type: value })\r\n  }\r\n  const onAccountChange = value => {\r\n    setState({ ...state, account_id: value })\r\n  }\r\n  const visible = id ? true : false;\r\n  console.log(visible, id);\r\n  return (\r\n    <div>\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Edit Transaction\"\r\n          // onOk={this.handleOk}\r\n          onCancel={() => setId(false)}\r\n          footer={[\r\n            <Button key=\"submit\" type=\"primary\"\r\n              danger\r\n              loading={loading}\r\n              onClick={() => handleDelete()}\r\n            >\r\n              Delete\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\"\r\n              loading={loading}\r\n              onClick={() => { document.getElementById(\"add-btn\").click() }}\r\n            >\r\n              Update\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <div>\r\n            <Form\r\n              {...layout}\r\n              name=\"basic\"\r\n              form={form}\r\n              initialValues={{ remember: true }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n            >\r\n              <Form.Item\r\n                label=\"Select Account\"\r\n                name=\"account_id\"\r\n                rules={[{ required: true, message: 'Please Select Account!' }]}\r\n              >\r\n                <Select\r\n                  placeholder=\"Select Account\"\r\n                  onChange={onAccountChange}\r\n                  allowClear\r\n                >\r\n                  {\r\n                    accounts.map((acc) => {\r\n                      return <Option key={Math.random()} value={acc.account_id}>{acc.name}</Option>\r\n                    })\r\n                  }\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Transaction Type\"\r\n                name=\"transaction_type\"\r\n                rules={[{ required: true, message: 'Please Select Transaction Type!' }]}\r\n              >\r\n                <Select\r\n                  placeholder=\"Select Transaction Type\"\r\n                  onChange={onTypeChange}\r\n                  allowClear\r\n                >\r\n                  <Option value=\"Expense\">Expense</Option>\r\n                  <Option value=\"Income\">Income</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Transaction Amount\"\r\n                name=\"transaction_amount\"\r\n                rules={[{ required: true, message: 'Please input Transaction Amount!' }]}\r\n              >\r\n                <InputNumber />\r\n              </Form.Item>\r\n              {/* <Form.Item {...tailLayout}> */}\r\n              <Button id=\"add-btn\" style={{ display: 'none' }} type=\"primary\" htmlType=\"submit\">\r\n                Update\r\n                </Button>\r\n              {/* </Form.Item> */}\r\n            </Form>\r\n          </div>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ Auth, Accounts, Transactions }) => ({ Auth, Accounts, Transactions })\r\nexport default connect(mapStateToProps)(AddAccount)",["131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":12,"column":6,"nodeType":"139","endLine":12,"endColumn":16,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":15,"column":1,"nodeType":"143","endLine":46,"endColumn":2},{"ruleId":"141","severity":1,"message":"142","line":15,"column":1,"nodeType":"143","endLine":46,"endColumn":2},{"ruleId":"141","severity":1,"message":"144","line":20,"column":1,"nodeType":"143","endLine":63,"endColumn":2},{"ruleId":"145","severity":1,"message":"146","line":2,"column":24,"nodeType":"147","messageId":"148","endLine":2,"endColumn":30},{"ruleId":"145","severity":1,"message":"149","line":2,"column":32,"nodeType":"147","messageId":"148","endLine":2,"endColumn":42},{"ruleId":"145","severity":1,"message":"150","line":3,"column":24,"nodeType":"147","messageId":"148","endLine":3,"endColumn":38},{"ruleId":"145","severity":1,"message":"151","line":3,"column":40,"nodeType":"147","messageId":"148","endLine":3,"endColumn":60},{"ruleId":"145","severity":1,"message":"152","line":2,"column":25,"nodeType":"147","messageId":"148","endLine":2,"endColumn":28},{"ruleId":"145","severity":1,"message":"153","line":2,"column":30,"nodeType":"147","messageId":"148","endLine":2,"endColumn":35},{"ruleId":"137","severity":1,"message":"154","line":29,"column":6,"nodeType":"139","endLine":29,"endColumn":8,"suggestions":"155"},{"ruleId":"145","severity":1,"message":"156","line":67,"column":9,"nodeType":"147","messageId":"148","endLine":67,"endColumn":13},{"ruleId":"145","severity":1,"message":"157","line":2,"column":31,"nodeType":"147","messageId":"148","endLine":2,"endColumn":39},{"ruleId":"145","severity":1,"message":"152","line":2,"column":25,"nodeType":"147","messageId":"148","endLine":2,"endColumn":28},{"ruleId":"145","severity":1,"message":"153","line":2,"column":30,"nodeType":"147","messageId":"148","endLine":2,"endColumn":35},{"ruleId":"137","severity":1,"message":"154","line":29,"column":6,"nodeType":"139","endLine":29,"endColumn":8,"suggestions":"158"},{"ruleId":"137","severity":1,"message":"154","line":42,"column":6,"nodeType":"139","endLine":42,"endColumn":8,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"160","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":22},{"ruleId":"145","severity":1,"message":"161","line":12,"column":7,"nodeType":"147","messageId":"148","endLine":12,"endColumn":17},{"ruleId":"145","severity":1,"message":"162","line":18,"column":10,"nodeType":"147","messageId":"148","endLine":18,"endColumn":15},{"ruleId":"137","severity":1,"message":"163","line":28,"column":6,"nodeType":"139","endLine":28,"endColumn":18,"suggestions":"164"},{"ruleId":"145","severity":1,"message":"161","line":14,"column":7,"nodeType":"147","messageId":"148","endLine":14,"endColumn":17},{"ruleId":"137","severity":1,"message":"165","line":32,"column":6,"nodeType":"139","endLine":32,"endColumn":10,"suggestions":"166"},{"ruleId":"133","replacedBy":"167"},{"ruleId":"135","replacedBy":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'LoadUser' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["171"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'LaptopOutlined' is defined but never used.","'NotificationOutlined' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.user_id'. Either include them or remove the dependency array.",["172"],"'data' is assigned a value but never used.","'Checkbox' is defined but never used.",["173"],["174"],"'PlusOutlined' is defined but never used.","'tailLayout' is assigned a value but never used.","'state' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accounts' and 'form'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'form' and 'transactions'. Either include them or remove the dependency array.",["176"],["169"],["170"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"179","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [dispatch]",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch, user.user_id]",{"range":"189","text":"190"},{"range":"191","text":"190"},{"range":"192","text":"190"},"Update the dependencies array to be: [account_id, accounts, form]",{"range":"193","text":"194"},"Update the dependencies array to be: [form, id, transactions]",{"range":"195","text":"196"},[367,377],"[dispatch]",[915,917],"[dispatch, user.user_id]",[981,983],[1268,1270],[1024,1036],"[account_id, accounts, form]",[1026,1030],"[form, id, transactions]"]